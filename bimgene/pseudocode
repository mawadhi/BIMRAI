//Define the following standard parameters:

BUILDING_FOOTPRINT_SHAPE =
NUMBER_OF_FLOORS =
WALL_MATERIAL =
WALL_HEIGHT =
WALL_THICKNESS =
SLAB_HEIGHT =
ROOF_MATERIAL =
DISTANCE_BETWEEN_OPENINGS =
BIM_WINDOW_PART =
DOOR_MATERIAL =
QUOINS_Y_N = 
QUOIN_STYLE =
QUOIN_MATERIAL =
QUOIN_MORTAR_COLOR =
CORNICE_Y_N =
CORNICE_PROFILE =
CORNICE_THICKNESS =
PILASTERS_Y_N =
DIAMETER_OF_TOP =
DIAMETER_OF_BOTTOM =
PILASTER_PEDESTAL =
PILASTER_FLUTING =

//Define optional custom parameters (examples shown):

CUSTOM_INSERTION_POINTS_1 =
CUSTOM_INSERTION_POINTS_2 =
CUSTOM_INSERTION_POINTS_3 =
CUSTOM_INSERTION_POINTS_4 =
CUSTOM_INSERTION_POINTS_5 =
CUSTOM_INSERTION_POINTS_6 =
CUSTOM_INSERTION_POINTS_7 =
CUSTOM_BIM_PART_1 =
CUSTOM_BIM_PART_2 =
CUSTOM_BIM_PART_3 =
CUSTOM_BIM_PART_4 =
CUSTOM_BIM_PART_5 =
CUSTOM_BIM_PART_6 =
CUSTOM_BIM_PART_7 =

//Define variables:

initialize wall_polylines
initialize wall_edges
initialize bim_walls
initialize ground_bim_walls
initialize bim_roof
initialize bim_slabs
initialize wall_segment_points
initialize opening_insertion_points
initialize door_insertion_points
initialize window_insertion_points
initialize window_orientation
initialize bim_windows
initialize door_orientation
initialize bim_doors
initialize offset_wall_edges
initialize offset_wall_vertices
initialize a
initialize quoin_angles
initialize bim_quoins
initialize bim_cornice
initialize bim_pilasters

initialize custom_insertion_points_per_wall
initialize bim_custom_windows
initialize custom_height_1
initialize custom_height_2
initialize custom_height_3
initialize custom_height_4
initialize custom_height_5
initialize custom_height_6
initialize custom_height_7
initialize custom_insertion_points_8_per_wall
initialize custom_height_8

//Define functions:

function vecZ(F) 
	do //Create a unit vector parallel to the Z-axis multiplied by a factor (F).
	return value
function arrLin(G,Dr,N)
	do //Graft a geometry data-tree (G) and create a linear array of G in a
	//direction (Dr) with a number of elements (N) in the array.
	return value
function deBrE(Br)
	do //Deconstruct an input B-rep geometry (Br) into its constituent edges.
	return value
function shift(L,N)
	do //Offset all items in an input data-tree list (L) by an integer value (N).
	return value
function rev(L)
	do //Reverse the order of items in an input data-tree list (L).
	return value
function wallSt1(BM,H,Th)
	do //Define settings of a basic wall for the BIM software, where BM is
	//building material, H is height, and Th is thickness.
	return value
function wall(C,S)
	do //Create a wall for the BIM software defined by a reference line or
	//curve (C) and settings (S).
	return value
function split(D,M)
	do //Split a data tree (D) into two parts using a path mask (M) and return 
	//the positive set of data branches that match the splitting mask.
	return value
function move(G,T)
	do //Move (translate) a geometry (G) along a translation vector (T). 
	return value
function offset(C,Dn)
	do //Offset the control-points of a curve (C) with a distance (Dn).
	return value
function roofSt(BM)
	do //Define the building material (BM) of a roof for the BIM software.
	return value
function roof(Py,S)
	do //Create a single-plane roof for the BIM software defined by a closed
	//polygon (Py) and settings (S).
	return value
function slab(Py)
	do //Create a slab for the BIM software defined by a closed polygon (Py).
	return value
